// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model KK {
  id          String   @id @default(uuid()) @db.Uuid
  no_kk       String   @unique
  provinsi    String
  kabupaten   String
  kecamatan   String
  kelurahan   String
  dusun       String
  rw          String
  rt          String
  kode_pos    String
  kepalaKeluarga KepalaKeluarga? @relation(fields: [kepalaKeluargaId], references: [id])
  kepalaKeluargaId String? @db.Uuid
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  AnggotaKeluarga AnggotaKeluarga[]
  LahirMasuk LahirMasuk[]
  Meninggal Meninggal[]
  PindahKeluar PindahKeluar[]
}

model KepalaKeluarga {
  id                String   @id @default(uuid()) @db.Uuid
  nik               String   @unique
  nama              String
  no_akta_kelahiran String?
  jenis_kelamin     String
  tempat_lahir      String
  tanggal_lahir     DateTime
  golongan_darah    String?
  agama             String
  status_perkawinan String
  pendidikan_akhir  String
  pekerjaan         String
  nama_ayah         String
  nama_ibu          String
  scan_ktp          String?  @db.Text  // Simpan path file
  scan_kk           String?  @db.Text
  scan_akta_lahir   String?  @db.Text
  scan_buku_nikah   String?  @db.Text
  kk                KK[]
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model AnggotaKeluarga {
  id                String   @id @default(uuid()) @db.Uuid
  nik               String   @unique
  nama              String
  no_akta_kelahiran String?
  jenis_kelamin     String
  tempat_lahir      String
  tanggal_lahir     DateTime
  golongan_darah    String?
  agama             String
  status_hubungan   String // New field for family relationship status
  status_perkawinan String
  pendidikan_akhir  String
  pekerjaan         String
  nama_ayah         String
  nama_ibu          String
  scan_ktp          String?  @db.Text
  scan_kk           String?  @db.Text
  scan_akta_lahir   String?  @db.Text
  scan_buku_nikah   String?  @db.Text
  kk                KK?      @relation(fields: [kkId], references: [id])
  kkId              String?  @db.Uuid
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model APBDes {
  id            String   @id @default(uuid()) @db.Uuid
  pendanaan     String
  jumlah_dana   Float
  jenis_apbd    String
  tahun         Int
  keterangan    String?  @db.Text
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model KategoriBerita {
  id            String   @id @default(uuid()) @db.Uuid
  kategori      String   @unique
  jumlah_berita Int      @default(0)
  berita        Berita[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Berita {
  id            String   @id @default(uuid()) @db.Uuid
  sampul        String[]  // Changed to String array to store multiple image paths
  judul         String
  berita        String   @db.Text
  kategori      KategoriBerita @relation(fields: [kategoriId], references: [id])
  kategoriId    String   @db.Uuid
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model KategoriProdukHukum {
  id                String   @id @default(uuid()) @db.Uuid
  kategori          String   @unique
  jumlah_produk_hukum Int    @default(0)
  produkHukum       ProdukHukum[]
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model ProdukHukum {
  id                String   @id @default(uuid()) @db.Uuid
  nama_produk_hukum String
  file_pendukung    String?  @db.Text // Path to PDF file
  kategori          KategoriProdukHukum @relation(fields: [kategoriId], references: [id])
  kategoriId        String   @db.Uuid
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model UMKM {
  id            String   @id @default(uuid()) @db.Uuid
  nama_umkm     String   @unique
  deskripsi_umkm String?  @db.Text
  foto_umkm     String?  @db.Text // Path to UMKM image
  kontak_wa     String
  produk        Produk[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Produk {
  id              String   @id @default(uuid()) @db.Uuid
  nama_produk     String
  deskripsi_produk String? @db.Text
  foto_produk     String? @db.Text // Path to product image
  link_produk     String?
  umkm            UMKM     @relation(fields: [umkmId], references: [id])
  umkmId          String   @db.Uuid
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model LahirMasuk {
  id              String   @id @default(uuid()) @db.Uuid
  nama            String
  nik             String   @unique
  tanggal_lahir_masuk DateTime
  alamat_sebelumnya String?  @db.Text
  kk              KK?      @relation(fields: [kkId], references: [id])
  kkId            String?  @db.Uuid
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Meninggal {
  id              String   @id @default(uuid()) @db.Uuid
  nama            String
  nik             String   @unique
  tanggal_meninggal DateTime
  alamat_meninggal String   @db.Text
  kk              KK?      @relation(fields: [kkId], references: [id])
  kkId            String?  @db.Uuid
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model PindahKeluar {
  id              String   @id @default(uuid()) @db.Uuid
  nama            String
  nik             String   @unique
  tanggal_pindah  DateTime
  alamat_tujuan   String   @db.Text
  kk              KK?      @relation(fields: [kkId], references: [id])
  kkId            String?  @db.Uuid
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model PotensiDesa {
  id              String   @id @default(uuid()) @db.Uuid
  nama            String
  deskripsi       String?  @db.Text
  kategori        String
  foto            String?  @db.Text // Path to photo
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Visitor {
  id          String   @id @default(uuid()) @db.Uuid
  ip_address  String
  user_agent  String?
  visits      Int      @default(1) // Berapa kali dia berkunjung
  first_visit DateTime @default(now())
  last_visit  DateTime @updatedAt
}
